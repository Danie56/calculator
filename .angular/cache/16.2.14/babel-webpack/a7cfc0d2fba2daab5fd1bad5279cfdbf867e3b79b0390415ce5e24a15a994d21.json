{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/integral.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nfunction CalculatorComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r1, \" \");\n  }\n}\nconst _c0 = function () {\n  return [\"SIMPSON_1_3\", \"TRAPEZOIDAL_METHOD\", \"JORGE\", \"SIMPSON_3_8\", \"OPEN_SIMPSON\"];\n};\nexport class CalculatorComponent {\n  cls() {\n    this.inputValue = '';\n  }\n  constructor(fb, integralService, _snackBar) {\n    this.fb = fb;\n    this.integralService = integralService;\n    this._snackBar = _snackBar;\n    this.inputValue = ''; // Variable que almacena el valor del campo de entrada\n    this.buttons = [[{\n      text: '1'\n    }, {\n      text: '2'\n    }, {\n      text: '3'\n    }, {\n      text: '+',\n      color: 'accent'\n    }, {\n      text: '-',\n      color: 'accent'\n    }], [{\n      text: '4'\n    }, {\n      text: '5'\n    }, {\n      text: '6'\n    }, {\n      text: '*',\n      color: 'accent'\n    }, {\n      text: '/',\n      color: 'accent'\n    }], [{\n      text: '7'\n    }, {\n      text: '8'\n    }, {\n      text: '9'\n    }, {\n      text: '^',\n      color: 'accent'\n    }, {\n      text: '{a}^{b}',\n      color: 'accent'\n    }], [{\n      text: 'nth_root()',\n      color: 'accent'\n    }, {\n      text: 'e'\n    }, {\n      text: 'pi'\n    }, {\n      text: 'sqrt',\n      color: 'accent'\n    }, {\n      text: 'log10',\n      color: 'accent'\n    }]];\n    this.form = this.fb.group({\n      expression: [''],\n      sub_intervals: [''],\n      type_method: ['']\n    });\n  }\n  openSnackBar(message, action) {\n    this._snackBar.open(message, action, {\n      duration: 4000\n    });\n  }\n  ngOnInit() {}\n  buttonClick(button) {\n    this.inputValue += button.text;\n    console.log(`Clicked: ${button.text}`);\n  }\n  calculate() {\n    this.integralService.save(this.form.value).subscribe(() => {\n      console.log('a');\n    }, () => {\n      this.openSnackBar('asegurate de que el formato LaTeX sea corecto', 'Cerrar');\n    });\n  }\n  static #_ = this.ɵfac = function CalculatorComponent_Factory(t) {\n    return new (t || CalculatorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.IntegralService), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalculatorComponent,\n    selectors: [[\"app-calculator\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[1, \"cotaner\"], [3, \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"expression\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"sub_intervals\"], [\"formControlName\", \"type_method\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"value\"]],\n    template: function CalculatorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"mat-form-field\", 2)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"integral en formato latex\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\", 2)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"sub intervalo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"tipo de metodo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-select\", 5);\n        i0.ɵɵtemplate(14, CalculatorComponent_mat_option_14_Template, 2, 2, \"mat-option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function CalculatorComponent_Template_button_click_15_listener() {\n          return ctx.calculate();\n        });\n        i0.ɵɵtext(16, \"Calcular\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(2, _c0));\n      }\n    },\n    dependencies: [i4.NgForOf, i5.MatButton, i6.MatInput, i7.MatFormField, i7.MatLabel, i8.MatSelect, i9.MatOption, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".mdc-text-field__input[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 16px;\\n  \\n}\\nbody[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\nbutton[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n}\\nmat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  width: 300px;\\n  padding: 10px; \\n}\\n.mat-select[_ngcontent-%COMP%]{\\n background-color: brown;\\n text-align: center;\\n align-items: center;\\n}\\n.cotaner[_ngcontent-%COMP%]{\\n  display: block;\\n  background-color: brown;\\n  width: 25%;\\n  height: -50px;\\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZXRzL2NhbGN1bGF0b3IvY2FsY3VsYXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjs7QUFFckI7QUFDQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtBQUNmO0FBQ0E7Q0FDQyx1QkFBdUI7Q0FDdkIsa0JBQWtCO0NBQ2xCLG1CQUFtQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixVQUFVO0VBQ1YsYUFBYTs7QUFFZiIsInNvdXJjZXNDb250ZW50IjpbIi5tZGMtdGV4dC1maWVsZF9faW5wdXQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDE2cHg7XHJcbiAgXHJcbn1cclxuYm9keSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogMTZweDtcclxufVxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgd2lkdGg6IDMwMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7IFxyXG59XHJcbi5tYXQtc2VsZWN0e1xyXG4gYmFja2dyb3VuZC1jb2xvcjogYnJvd247XHJcbiB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5jb3RhbmVye1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJyb3duO1xyXG4gIHdpZHRoOiAyNSU7XHJcbiAgaGVpZ2h0OiAtNTBweDtcclxuXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","ɵɵadvance","ɵɵtextInterpolate1","CalculatorComponent","cls","inputValue","constructor","fb","integralService","_snackBar","buttons","text","color","form","group","expression","sub_intervals","type_method","openSnackBar","message","action","open","duration","ngOnInit","buttonClick","button","console","log","calculate","save","value","subscribe","_","ɵɵdirectiveInject","i1","FormBuilder","i2","IntegralService","i3","MatSnackBar","_2","selectors","decls","vars","consts","template","CalculatorComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","CalculatorComponent_mat_option_14_Template","ɵɵlistener","CalculatorComponent_Template_button_click_15_listener","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\Janus\\Documents\\angular\\calculator\\src\\app\\componets\\calculator\\calculator.component.ts","C:\\Users\\Janus\\Documents\\angular\\calculator\\src\\app\\componets\\calculator\\calculator.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { IntegralService } from 'src/app/services/integral.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\ninterface Button {\n  text: string;\n  color?: 'primary' | 'accent' | 'warn' | string;\n}\n\n  @Component({\n    selector: 'app-calculator',\n    templateUrl: './calculator.component.html',\n    styleUrls: ['./calculator.component.css'],\n\n  })\n\nexport class CalculatorComponent implements OnInit {\ncls() {\n  this.inputValue =''\n}\n  inputValue: string = ''; // Variable que almacena el valor del campo de entrada\n  color?: 'primary' | 'accent' | 'warn' | string;\n\n  buttons: Button[][] = [\n    [{ text: '1' }, { text: '2' }, { text: '3' }, { text: '+', color: 'accent' }, { text: '-', color: 'accent' }],\n    [{ text: '4' }, { text: '5' }, { text: '6' }, { text: '*', color: 'accent' }, { text: '/', color: 'accent' }],\n    [{ text: '7' }, { text: '8' }, { text: '9' }, { text: '^', color: 'accent' }, { text: '{a}^{b}', color: 'accent' }],\n    [{ text: 'nth_root()', color: 'accent' }, { text: 'e' }, { text: 'pi' }, { text: 'sqrt', color: 'accent' }, { text: 'log10', color: 'accent' }],\n  ];\n  form: FormGroup;\n\n\n  constructor(private fb: FormBuilder, private integralService : IntegralService,private _snackBar: MatSnackBar) {\n    this.form = this.fb.group({\n      expression: [''],\n      sub_intervals: [''],\n      type_method: ['']\n    });\n  \n  }\n  \n  openSnackBar(message: string, action: string) {\n    this._snackBar.open(message, action, {\n      duration: 4000, \n    });\n  }\n\n  ngOnInit() {\n  }\n  buttonClick(button: { text: string }) {\n    this.inputValue += button.text; \n\n    console.log(`Clicked: ${button.text}`);\n  }\n  calculate(){\n    this.integralService.save(this.form.value).subscribe(()=>{\n      console.log('a')\n\n    },() => {\n      this.openSnackBar('asegurate de que el formato LaTeX sea corecto','Cerrar')\n    });\n  }\n  \n\n\n}\n\n","<div class=\"cotaner\">\n<form [formGroup]=\"form\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>integral en formato latex</mat-label>\n    <input matInput formControlName=\"expression\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>sub intervalo</mat-label>\n    <input type=\"number\" matInput formControlName=\"sub_intervals\">\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>tipo de metodo</mat-label>\n    <mat-select formControlName=\"type_method\">\n      <mat-option *ngFor=\"let option of ['SIMPSON_1_3', 'TRAPEZOIDAL_METHOD', 'JORGE', 'SIMPSON_3_8', 'OPEN_SIMPSON']\" [value]=\"option\">\n        {{ option }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <button mat-raised-button color=\"primary\" (click)=\"calculate()\">Calcular</button>\n</form>\n</div>"],"mappings":";;;;;;;;;;;;ICeMA,EAAA,CAAAC,cAAA,oBAAkI;IAChID,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAa;;;;IAFoGH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IAC/HL,EAAA,CAAAM,SAAA,GACF;IADEN,EAAA,CAAAO,kBAAA,MAAAF,SAAA,MACF;;;;;;ADCN,OAAM,MAAOG,mBAAmB;EAChCC,GAAGA,CAAA;IACD,IAAI,CAACC,UAAU,GAAE,EAAE;EACrB;EAaEC,YAAoBC,EAAe,EAAUC,eAAiC,EAASC,SAAsB;IAAzF,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,eAAe,GAAfA,eAAe;IAA2B,KAAAC,SAAS,GAATA,SAAS;IAZhG,KAAAJ,UAAU,GAAW,EAAE,CAAC,CAAC;IAGzB,KAAAK,OAAO,GAAe,CACpB,CAAC;MAAEC,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAAE;MAAED,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAE,CAAC,EAC7G,CAAC;MAAED,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAAE;MAAED,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAE,CAAC,EAC7G,CAAC;MAAED,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAAE;MAAED,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAQ,CAAE,CAAC,EACnH,CAAC;MAAED,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAAE;MAAED,IAAI,EAAE;IAAG,CAAE,EAAE;MAAEA,IAAI,EAAE;IAAI,CAAE,EAAE;MAAEA,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAQ,CAAE,EAAE;MAAED,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAQ,CAAE,CAAC,CAChJ;IAKC,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MACxBC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,aAAa,EAAE,CAAC,EAAE,CAAC;MACnBC,WAAW,EAAE,CAAC,EAAE;KACjB,CAAC;EAEJ;EAEAC,YAAYA,CAACC,OAAe,EAAEC,MAAc;IAC1C,IAAI,CAACX,SAAS,CAACY,IAAI,CAACF,OAAO,EAAEC,MAAM,EAAE;MACnCE,QAAQ,EAAE;KACX,CAAC;EACJ;EAEAC,QAAQA,CAAA,GACR;EACAC,WAAWA,CAACC,MAAwB;IAClC,IAAI,CAACpB,UAAU,IAAIoB,MAAM,CAACd,IAAI;IAE9Be,OAAO,CAACC,GAAG,CAAC,YAAYF,MAAM,CAACd,IAAI,EAAE,CAAC;EACxC;EACAiB,SAASA,CAAA;IACP,IAAI,CAACpB,eAAe,CAACqB,IAAI,CAAC,IAAI,CAAChB,IAAI,CAACiB,KAAK,CAAC,CAACC,SAAS,CAAC,MAAI;MACvDL,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAElB,CAAC,EAAC,MAAK;MACL,IAAI,CAACT,YAAY,CAAC,+CAA+C,EAAC,QAAQ,CAAC;IAC7E,CAAC,CAAC;EACJ;EAAC,QAAAc,CAAA,G;qBA7CU7B,mBAAmB,EAAAR,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAA1C,EAAA,CAAAsC,iBAAA,CAAAK,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAnBrC,mBAAmB;IAAAsC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QClBhCpD,EAAA,CAAAC,cAAA,aAAqB;QAGND,EAAA,CAAAE,MAAA,gCAAyB;QAAAF,EAAA,CAAAG,YAAA,EAAY;QAChDH,EAAA,CAAAsD,SAAA,eAA6C;QAC/CtD,EAAA,CAAAG,YAAA,EAAiB;QAEjBH,EAAA,CAAAC,cAAA,wBAAkC;QACrBD,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAY;QACpCH,EAAA,CAAAsD,SAAA,eAA8D;QAChEtD,EAAA,CAAAG,YAAA,EAAiB;QAEjBH,EAAA,CAAAC,cAAA,yBAAkC;QACrBD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAY;QACrCH,EAAA,CAAAC,cAAA,qBAA0C;QACxCD,EAAA,CAAAuD,UAAA,KAAAC,0CAAA,wBAEa;QACfxD,EAAA,CAAAG,YAAA,EAAa;QAGfH,EAAA,CAAAC,cAAA,iBAAgE;QAAtBD,EAAA,CAAAyD,UAAA,mBAAAC,sDAAA;UAAA,OAASL,GAAA,CAAApB,SAAA,EAAW;QAAA,EAAC;QAACjC,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QApB7EH,EAAA,CAAAM,SAAA,GAAkB;QAAlBN,EAAA,CAAAI,UAAA,cAAAiD,GAAA,CAAAnC,IAAA,CAAkB;QAcalB,EAAA,CAAAM,SAAA,IAAgF;QAAhFN,EAAA,CAAAI,UAAA,YAAAJ,EAAA,CAAA2D,eAAA,IAAAC,GAAA,EAAgF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}